<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

    <!-- Define targets -->
    <targets>
        <!-- Log to console -->
        <target xsi:type="Console" name="console" layout="${date:format=HH\:mm\:ss} ${logger} ${message}" />

        <!-- Log to file -->
        <target xsi:type="File" name="file" fileName="log.txt"
                layout="${longdate} ${uppercase:${level}} ${logger} ${message}" />

        <!-- Log to event log -->
        <target xsi:type="EventLog" name="eventlog" source="MyApp" log="Application"
                layout="${longdate} ${uppercase:${level}} ${message}" />

        <!-- Log to database -->
        <target xsi:type="Database" name="database"
                dbProvider="System.Data.SqlClient"
                connectionString="Data Source=myServer;Initial Catalog=myDB;Integrated Security=True"
                commandText="INSERT INTO Log (Timestamp, Level, Logger, Message) VALUES (@timestamp, @level, @logger, @message)">
            <parameter name="@timestamp" layout="${date}" />
            <parameter name="@level" layout="${level}" />
            <parameter name="@logger" layout="${logger}" />
            <parameter name="@message" layout="${message}" />
        </target>
    </targets>

    <!-- Define rules -->
    <rules>
        <!-- All logs go to console and file -->
        <logger name="*" minlevel="Trace" writeTo="console,file" />

        <!-- Logs from the 'MyApp' namespace go to the event log -->
        <logger name="MyApp.*" minlevel="Error" writeTo="eventlog" />

        <!-- Logs with the 'Database' target -->
        <logger name="DatabaseLogger" minlevel="Info" writeTo="database" />

        <!-- Exclude logs from 'ExcludedLogger' -->
        <logger name="ExcludedLogger" minlevel="Trace" final="true" />
    </rules>

    <!-- Define filters -->
    <filters>
        <!-- Include logs from specific logger -->
        <when condition="logger == 'IncludedLogger'" action="Log" />

        <!-- Exclude logs with specific level -->
        <when condition="level == LogLevel.Debug" action="Ignore" />

        <!-- Log only messages containing 'Error' -->
        <when condition="contains(message, 'Error')" action="Log" />

        <!-- Log only messages containing 'Important' and of level 'Info' -->
        <when condition="contains(message, 'Important') and level == LogLevel.Info" action="Log" />
    </filters>
</nlog>
